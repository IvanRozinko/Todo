{"version":3,"sources":["components/Heading/Heading.js","assets/mock/todos.js","components/Checkbox/Checkbox.js","components/TodoListItem/TodoListItem.js","components/CustomDateInput/CustomDateInput.js","components/TodoEditItem/TodoEditItem.js","components/TodoList/TodoList.js","App.js","index.js"],"names":["addTask","timeStampToString","className","Date","now","onClick","type","id","title","date","done","Checkbox","isChecked","role","TodoListItem","task","updateTasks","CustomDateInput","this","props","value","Component","TodoEditItem","handleInputChange","target","state","setState","name","handleDateChange","parse","isOpen","toggleModal","deleteTask","closeOnEsc","show","onClose","selected","onChange","customInput","dateFormat","withPortal","maxLength","TodoList","tasks","getNewTaskId","length","sort","a","b","slice","pop","filter","handleItemClick","activeTask","find","prevState","isOpenModal","updatedTask","callback","updatedTasks","map","timestamp","day","getDate","month","getMonth","year","getFullYear","undefined","store","localStorage","getItem","storedTasks","JSON","tasksMock","prevProps","setItem","stringify","key","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd3d4d75.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Heading.css';\r\n\r\nexport default ({ addTask, timeStampToString }) => (\r\n  <div className=\"column heading heading-container\">\r\n    <div className=\"columns level-item\">\r\n      <h1 className=\"title is-2 heading-title has-text-centered\">\r\n        Make your list\r\n      </h1>\r\n    </div>\r\n    <div className=\"columns is-vcentered is-mobile\">\r\n      <div className=\"column\">\r\n        <p className=\"subtitle\">\r\n          {timeStampToString(Date.now())}\r\n        </p>\r\n      </div>\r\n      <div className=\"column level-right\">\r\n        <button\r\n          className=\"button is-primary\"\r\n          onClick={addTask}\r\n          type='button'\r\n        >\r\n          Add task\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n","export default [\r\n  {\r\n    id: 1,\r\n    title: 'Add your first mission',\r\n    date: Date.now(),\r\n    done: false,\r\n  },\r\n];\r\n","import React from 'react';\r\nimport './Checkbox.css';\r\n\r\nconst Checkbox = ({ isChecked, onClick }) => (\r\n  <div className=\"container\" onClick={onClick} role='button'>\r\n    <div className=\"checkbox-container\">\r\n      <div className={`${isChecked ? 'checked-side' : ''}`} />\r\n      <div className={`${isChecked ? 'checked-bottom' : ''}`} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Checkbox;\r\n","import React from 'react';\r\nimport './TodoListItem.css';\r\nimport Checkbox from '../Checkbox/Checkbox';\r\n\r\nconst TodoListItem = ({\r\n  task, onClick, updateTasks, timeStampToString,\r\n}) => (\r\n  <div className=\"box\">\r\n    <div className=\"columns is-mobile is-vcentered\">\r\n      <div className=\"column is-1\">\r\n        <div className=\"level-item\">\r\n          <Checkbox isChecked={task.done} onClick={() => updateTasks({ ...task, done: !task.done })} />\r\n        </div>\r\n      </div>\r\n      <div className=\"column is-11 pointer title-container\" onClick={() => onClick(task.id)} role='button'>\r\n        <p className={`level-left task-title ${task.done ? 'task-done' : ''}`}>{task.title}</p>\r\n      </div>\r\n    </div>\r\n    <div className=\"columns level-right\">\r\n      <div className=\"level-right\" onClick={() => onClick(task.id)} role='button'>\r\n        <div className=\"has-text-right task-date\">{timeStampToString(task.date)}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default TodoListItem;\r\n","import React, { Component } from 'react';\r\n\r\nclass CustomDateInput extends Component {\r\n  render() {\r\n    const { value, onClick } = this.props;\r\n    return (\r\n      <button\r\n        onClick={onClick}\r\n        className=\"button is-primary is-outlined\"\r\n        type=\"button\"\r\n      >\r\n        {value}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomDateInput;\r\n","import React, {Component} from 'react';\r\nimport {Modal} from 'react-bulma-components';\r\nimport DatePicker from 'react-datepicker';\r\nimport CustomDateInput from '../CustomDateInput/CustomDateInput';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nclass TodoEditItem extends Component {\r\n  constructor (props) {\r\n    super(props);\r\n    const { task } = this.props;\r\n    this.state = {\r\n      task\r\n    }\r\n  };\r\n\r\n  handleInputChange = ({target}) => {\r\n    const {task} = this.state;\r\n    this.setState({\r\n      task: {\r\n        ...task, [target.name]: target.value\r\n      }\r\n    })\r\n  };\r\n\r\n  handleDateChange = date => {\r\n    const {task} = this.state;\r\n    this.setState({\r\n      task: {\r\n        ...task, date: Date.parse(date)\r\n      }\r\n    })\r\n  };\r\n\r\n  render () {\r\n    const {isOpen, toggleModal, updateTasks, deleteTask} = this.props;\r\n    const {task} = this.state;\r\n    return (\r\n      <Modal\r\n        closeOnEsc={true}\r\n        show={isOpen}\r\n        onClose={toggleModal}\r\n      >\r\n        <div className='modal-card'>\r\n          <header className='modal-card-head has-background-primary'>\r\n            <p className='modal-card-title'>Edit task</p>\r\n            <button className='delete' onClick={toggleModal}/>\r\n          </header>\r\n          <section className='modal-card-body'>\r\n            <div className=\"level\">\r\n              <DatePicker\r\n                selected={task.date}\r\n                onChange={this.handleDateChange}\r\n                customInput={<CustomDateInput/>}\r\n                dateFormat=\"dd/MM/yyyy\"\r\n                withPortal\r\n              />\r\n            </div>\r\n            <input\r\n              className='input is-primary'\r\n              value={task.title}\r\n              onChange={this.handleInputChange}\r\n              name='title'\r\n              maxLength={300}\r\n            />\r\n          </section>\r\n          <footer className='modal-card-foot'>\r\n            <button\r\n              className='button is-danger'\r\n              onClick={() => deleteTask(task.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n            <button\r\n              className='button is-primary'\r\n              onClick={() => updateTasks(task, toggleModal)}\r\n            >\r\n              Save\r\n            </button>\r\n          </footer>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  };\r\n}\r\n\r\nexport default TodoEditItem;\r\n","import React, { Component } from 'react';\r\nimport Heading from '../Heading/Heading';\r\nimport tasksMock from '../../assets/mock/todos';\r\nimport TodoListItem from '../TodoListItem/TodoListItem';\r\nimport TodoEditItem from '../TodoEditItem/TodoEditItem';\r\n\r\nclass TodoList extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tasks: [],\r\n      activeTask: undefined,\r\n      isOpenModal: false\r\n    };\r\n  }\r\n\r\n  componentDidMount () {\r\n    const store = localStorage.getItem('tasks');\r\n    const storedTasks = JSON.parse(store);\r\n    this.setState({ tasks: storedTasks && storedTasks.length ? storedTasks : tasksMock })\r\n  }\r\n\r\n  componentDidUpdate (prevProps, prevState) {\r\n    const { tasks } = this.state;\r\n    if (prevState.tasks !== tasks) {\r\n      localStorage.setItem('tasks', JSON.stringify(tasks));\r\n    }\r\n  };\r\n\r\n  addTask = () => {\r\n    const { tasks } = this.state;\r\n    const task = {\r\n      id: this.getNewTaskId(),\r\n      title: 'New task, press to edit...',\r\n      date: Date.now(),\r\n      done: false\r\n    };\r\n    this.setState({\r\n      tasks: [...tasks, task]\r\n    })\r\n  };\r\n\r\n  getNewTaskId = () => {\r\n    const { tasks } = this.state;\r\n    let id = 1;\r\n    if (tasks.length) {\r\n      tasks.sort((a, b) => a.id - b.id);\r\n      const lastTask =  tasks.slice(-1).pop();\r\n      id = lastTask.id + 1;\r\n    }\r\n    return id ;\r\n  };\r\n\r\n  deleteTask = id => {\r\n    const { tasks } = this.state;\r\n    this.setState({ tasks: tasks.filter(task => task.id !== id)});\r\n    this.toggleModal();\r\n  };\r\n\r\n  handleItemClick = id => {\r\n    const { tasks } = this.state;\r\n    this.setState({ activeTask: tasks.find(task => task.id === id)});\r\n    this.toggleModal();\r\n  };\r\n\r\n  toggleModal = () => this.setState(prevState => ({ isOpenModal: !prevState.isOpenModal }));\r\n\r\n  updateTasks = (updatedTask, callback) => {\r\n    const { tasks } = this.state;\r\n    const updatedTasks = tasks.map(task => task.id === updatedTask.id ? {...task, ...updatedTask} : task);\r\n    this.setState({ tasks: updatedTasks });\r\n    callback && callback();\r\n  };\r\n\r\n  timeStampToString = timestamp => {\r\n    const date = new Date(timestamp);\r\n    const day = date.getDate();\r\n    const month = date.getMonth() + 1;\r\n    const year = date.getFullYear();\r\n    return `${day}/${month}/${year}`\r\n  };\r\n\r\n  render() {\r\n    const { tasks, activeTask, isOpenModal } = this.state;\r\n    return(\r\n          <div className=\"columns is-centered is-gapless\">\r\n            <div className=\"column is-three-fifths\">\r\n              <Heading\r\n                timeStampToString={this.timeStampToString}\r\n                addTask={this.addTask}\r\n              />\r\n              <div className=\"column\">\r\n                {tasks.map(task =>\r\n                  <TodoListItem\r\n                    task={task}\r\n                    key={task.id}\r\n                    onClick={this.handleItemClick}\r\n                    updateTasks={this.updateTasks}\r\n                    timeStampToString={this.timeStampToString}\r\n                  />\r\n                )}\r\n              </div>\r\n              {isOpenModal &&\r\n              <TodoEditItem\r\n                task={activeTask}\r\n                isOpen={isOpenModal}\r\n                toggleModal={this.toggleModal}\r\n                updateTasks={this.updateTasks}\r\n                handleInputChange={this.handleInputChange}\r\n                deleteTask={this.deleteTask}\r\n              />\r\n              }\r\n            </div>\r\n          </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport 'react-bulma-components/dist/react-bulma-components.min.css';\r\nimport TodoList from './components/TodoList/TodoList';\r\n\r\nfunction App() {\r\n  return (\r\n    <TodoList />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}